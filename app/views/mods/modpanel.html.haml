- content_for :title, 'Moderator Controls'
%p#notice.bg-info.text-center= notice

.panel-container
  .row
    .col-md-9.col-sm-12
      %h2 Welcome #{current_mod.email}
    .col-md-3.pull-right.col-sm-12
      %h4 Quick Links
      %table.table
        %tr
          %td
            %a{:href => modlist_path} View Moderators
        %tr
          %td
            %a{:href => modedit_path} Edit Moderators
        %tr
          %td
            %a{:href => wallpapers_path} Wallpaper Management
        %tr
          %td
            %a{:href =>  events_path} View Events
        %tr
          %td
            %a{:href =>  new_event_path} Create Event
        %tr
          %td
            %a{:href => contacts_edit_path} Edit Contact Details

    .col-md-9.col-sm-12
      %h3 Edits Waiting Approval
      %table.table.table-bordered
        %tr
          %th Title
          %th Date Edited
          %th Contact
        - @approveRec.each do |edit|
          %tr
            %td
              %a{:href => "/media/#{edit.medium_id}?record_id=#{edit.id}"} #{edit.title}
            %td= edit.updated_at.to_formatted_s(:long)
            %td
              %button.btn.btn-primary.btn-lg{"data-target" => "#contact", "data-toggle" => "modal", :type => "button"} Contact

/ Modal
#contact.modal.fade{:role => "dialog"}
  .modal-dialog
    / Modal content
    .modal-content
      .modal-header
        %button.close{"data-dismiss" => "modal", :type => "button"} Ã—
        %h4.modal-title Contact Contributor
      .modal-body
        %p this is where the code will go
        -#-links = Link.all
        -#-results = []
        -#-links.each do |link|
        -#  -if link.med_one == @current_record.medium_id && Medium.where(:id => link.med_two).first.class.name != 'Image'
        -#    -result = Record.where(:medium_id => link.med_two,:approved => true).order(:created_at).last
        -#    -if result
        -#      -results.append(result)
        -#  -elsif link.med_two == @current_record.medium_id && Medium.where(:id => link.med_one).first.class.name != 'Image'
        -#    -result = Record.where(:medium_id => link.med_one,:approved => true).order(:created_at).last
        -#    -if result
        -#      -results.append(result)
        -#%table.table.table-bordered
        -#  %tr
        -#    %th Title
        -#    %th Type
        -#  -results.each do |item|
        -#    %tr
        -#      %td
        -#        %a{:href => media_path+ "/#{raw(item[:medium_id])}"}
        -#          =item.title
        -#      %td
        -#        = Medium.where(:id => item.medium_id).first.class.name
        -#
        -#      %td
        -#        = form_tag(media_url+'/'+@current_record.medium_id.to_s, method: 'get', id: 'delete_link') do
        -#          .form-group.form-inline
        -#            .input-group
        -#              -if results
        -#                -returnLink_one = Link.where(:med_two => item.medium_id, :med_one => @current_record.medium_id).first
        -#                -if returnLink_one.nil?
        -#                  -returnLink_two = Link.where(:med_one => item.medium_id, :med_two => @current_record.medium_id).first.id
        -#                  = hidden_field_tag(:link_id, params[:link_id], :value => "#{returnLink_two}")
        -#                -else
        -#                  = hidden_field_tag(:link_id, params[:link_id], :value => "#{returnLink_one.id}")
        -#                %span.input-group-btn
        -#                  = submit_tag('Remove', :class => 'btn btn-danger')
      .modal-footer
        %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
