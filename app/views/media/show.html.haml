- content_for :title, @current_record.title

- content_for :scripts do
  = javascript_include_tag 'map'
  = javascript_include_tag 'media'
  %script{:src => "//maps.google.com/maps/api/js", :type => "text/javascript"}
    = yield :scripts

.row
  .col-md-8
    = form_tag(medium_url,  :method=>'get') do
      Edit History
      - if mod_signed_in?
        = select_tag 'record_id', options_for_select(@medium.all_records.reverse.collect {|a| [a.to_s_mod , a.id]},  @current_record.id)
      - else
        = select_tag 'record_id', options_for_select(@medium.approved_records.reverse.collect {|a| [a.to_s , a.id]},  @current_record.id)
      = submit_tag 'View', name: nil, class: 'btn btn-default', id: 'view_edit'
  .col-md-2
  - # Only the latest record can be edified to reduce conflicts
  - if @current_record == @medium.latest_approved_record
    .col-md-1
      = link_to 'Edit', edit_medium_path, {class: 'btn btn-warning pull-right'}
  .col-md-1.pull-right
    = form_tag(report_path, method: "post", id: "report_record") do
      = hidden_field_tag :medium_id, @current_record.medium_id
      = hidden_field_tag :record_title, @current_record.title
      = submit_tag('Report', class: 'btn btn-danger pull-right' )

- if mod_signed_in?
  %br
  .row
    .col-md-12
      = form_tag(approve_medium_url,  :method=>'get') do
        = hidden_field_tag :record_id, @current_record.id
        = submit_tag 'Approve Edit', name: 'approve', class: 'btn btn-primary' unless @current_record.approved?
        = submit_tag 'Remove Edit', name: 'remove', class: 'btn btn-danger pull-right'

%br
%div.panel.panel-default
  %div.panel-body.record
    .row
      .col-md-12
        .page-header
          .row
            .col-md-8.col-sm-6
              %h2 #{@current_record.title}
            .col-md-3.col-sm-6.date.pull-right
              #{@current_record.ref_date.to_formatted_s(:long) if @current_record.ref_date?}
    - unless @current_record.description.nil?
      .row.description
        .col-md-6.col-sm-12
          #{@current_record.description}

    .row
      - if @medium.class.name == 'Recording'
        .col-md-12
          %audio{controls: '', preload: 'auto'}
            %source{src: @medium.upload.url }
          :javascript
            $(function() {
                $('audio').mediaelementplayer({
                  audioWidth: '100%',
                  enableAutosize: true,});
            });
      - elsif @medium.class.name == 'Document'
        .col-md-12
          %object{data: @medium.upload.url}
      - elsif @medium.class.name == 'Text'
        .col-md-12
          %p= simple_format(File.read(@medium.upload.path))
      - elsif @medium.class.name == 'Image'
        .col-md-12
          %img{:src => @medium.upload.url,:width=>'100%'}


    - if @medium.class.name == 'Recording' && (not @medium.transcript.url.nil?)
      .row
        .col-md-12
          %object{:data => @medium.transcript.url, :height => '300px'}

    - if @current_record.location?
      %br
      .row
        .col-md-12
          .page-header
            %h2 Map
        .col-md-12
          #{@current_record.location}
    - if @current_record.latitude? && @current_record.longitude?
      #map-container.row
        .col-md-12.col-sm-12
          #map{:style => 'height: 250px;'}

-#This is the code for the view/remove relevant links modal
%button.btn.btn-info.btn-lg{"data-target" => "#remove-link", "data-toggle" => "modal", :type => "button"} View Relevant Links
= render 'view_relevant_links', locals: {current_record: @current_record, medium: @medium}

-#This is the code for the view/remove relevant images modal
%button.btn.btn-warning.btn-lg{"data-target" => "#remove-img", "data-toggle" => "modal", :type => "button"} View Relevant Images
= render 'view_relevant_images',  locals: {current_record: @current_record, medium: @medium}

-#This is the code for the add revelevant links modal
%button.btn.btn-info.btn-lg{"data-target" => "#add-link", "data-toggle" => "modal", :type => "button"} Add Relevant Links
= render 'add_relevant_links', locals: {current_record: @current_record, medium: @medium}

-#This is the code for the add revelevant images!! modal
%button.btn.btn-warning.btn-lg{"data-target" => "#add-img", "data-toggle" => "modal", :type => "button", } Add Relevant Images
= render 'add_relevant_images', locals: {current_record: @current_record, medium: @medium}

:javascript
   //This is the map declaration, with the center and zoom etc.
   //It is unlikely that changes will need to be made here.
   var latlng = new google.maps.LatLng(parseFloat("#{@current_record.latitude}"),parseFloat("#{@current_record.longitude}"));
  map = new GMaps({
    el: '#map',
    lat: parseFloat("#{@current_record.latitude}"),
    lng: parseFloat("#{@current_record.longitude}"),
    zoom: 13
  });
  map.addMarker({position:latlng});
