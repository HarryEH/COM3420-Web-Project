- content_for :title, @current_record.title

- content_for :scripts do
  = javascript_include_tag 'map'
  = javascript_include_tag 'media'
  %script{:src => "//maps.google.com/maps/api/js", :type => "text/javascript"}
    = yield :scripts

.row
  .col-md-8
    = form_tag(medium_url,  :method=>'get') do
      Edit History
      - if mod_signed_in?
        = select_tag 'record_id', options_for_select(@medium.all_records.reverse.collect {|a| [a.to_s_mod , a.id]},  @current_record.id)
      - else
        = select_tag 'record_id', options_for_select(@medium.approved_records.reverse.collect {|a| [a.to_s , a.id]},  @current_record.id)
      = submit_tag 'View', name: nil, class: 'btn btn-default'
  .col-md-2
  - # Only the latest record can be edified to reduce conflicts
  - if @current_record == @medium.latest_approved_record
    .col-md-1
      = link_to 'Edit', edit_medium_path, {class: 'btn btn-warning pull-right'}
  .col-md-1.pull-right
    = form_tag(report_path, method: "post", id: "report_record") do
      -#put some hidden fields here
      = hidden_field_tag :medium_id, @current_record.medium_id
      = hidden_field_tag :record_title, @current_record.title
      = submit_tag('Report', class: 'btn btn-danger pull-right' )

- if mod_signed_in?
  %br
  .row
    .col-md-12
      = form_tag(approve_medium_url,  :method=>'get') do
        = hidden_field_tag :record_id, @current_record.id
        = submit_tag 'Approve Edit', name: 'approve', class: 'btn btn-primary' unless @current_record.approved?
        = submit_tag 'Remove Edit', name: 'remove', class: 'btn btn-danger pull-right'

%br
%div.panel.panel-default
  %div.panel-body.record
    .row
      .col-md-4.col-sm-6
        %h2 #{@current_record.title}
      .col-md-3.col-sm-6.date.pull-right
        #{@current_record.ref_date.to_formatted_s(:long) if @current_record.ref_date?}
    - unless @current_record.description.nil?
      .row.description
        .col-md-6.col-sm-12
          #{@current_record.description}

    .row
      - if @medium.class.name == 'Recording'
        .col-md-12
          %audio{controls: '', preload: 'auto'}
            %source{src: @medium.upload.url }
          :javascript
            $(function() {
                $('audio').mediaelementplayer({
                  audioWidth: '100%',
                  enableAutosize: true,});
            });
      - elsif @medium.class.name == 'Document'
        .col-md-12
          %object{data: @medium.upload.url}
      - elsif @medium.class.name == 'Text'
        .col-md-12
          #{File.read(@medium.upload.path)}
      - elsif @medium.class.name == 'Image'
        .col-md-12
          %img{:src => @medium.upload.url,:width=>'100%'}


    - if @medium.class.name == 'Recording' && (not @medium.transcript.url.nil?)
      .row
        .col-md-12
          %object{:data => @medium.transcript.url, :height => '300px'}

    - if @current_record.location?
      %br
      .row.col-md-12
        #{@current_record.location}
    - if @current_record.latitude?
      %br
      #map-container.row.col-md-12.col-sm-12
        #map{:style => 'height: 250px;'}
%button.btn.btn-info.btn-lg{"data-target" => "#myModal", "data-toggle" => "modal", :type => "button"} Open Modal
/ Modal
#myModal.modal.fade{:role => "dialog"}
  .modal-dialog
    / Modal content
    .modal-content
      .modal-header
        %button.close{"data-dismiss" => "modal", :type => "button"} Ã—
        %h4.modal-title Add Relevant links!
      .modal-body
        -#todo make sure that this record doesnt appear!
        -
        %table.table.table-bordered
          %tr
            %th Title
            %th Type
            %th Add
          -Medium.all.each do |med|
            %tr
              %td
                = med.latest_approved_record.title
              %td
                = med.class.name
              %td
                = form_tag(media_url+'/'+@current_record.medium_id.to_s, method: "get", id: "link-up") do
                  .form-group.form-inline
                    .input-group
                      = hidden_field_tag(:med_one, params[:med_one], :value => "#{@current_record.medium_id}")
                      = hidden_field_tag(:med_two, params[:med_two], :value => "#{med.id}")
                      %span.input-group-btn
                        = submit_tag("Add", :class => "btn btn-danger" )
      .modal-footer
        %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Close
      :javascript
        //This is the map declaration, with the center and zoom etc.
        //It is unlikely that changes will need to be made here.
        var latlng = new google.maps.LatLng(parseFloat("#{@current_record.latitude}"),parseFloat("#{@current_record.longitude}"));
        map = new GMaps({
          el: '#map',
          lat: parseFloat("#{@current_record.latitude}"),
          lng: parseFloat("#{@current_record.longitude}"),
          zoom: 13
        });
        map.addMarker({position:latlng});
