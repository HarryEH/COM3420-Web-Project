- content_for :title, 'Contribute'

- content_for :scripts do
  = javascript_include_tag 'map'
  = javascript_include_tag 'parsley.min'
  %script{:src => "//maps.google.com/maps/api/js", :type => "text/javascript"}
  = yield :scripts

%h2 Edit #{ @current_record.title }
%br

%div.panel.panel-default
  %div.panel-body
    .row
      - # This is at the top when the layout is small, not so great!
      #map-container.col-md-5.col-sm-12.pull-right
        %h3 Click to add marker
        #map{:style => 'height: 510px;'}
        %button{id: 'clear-marker', class: 'pull-right btn btn-warning'}
          Remove marker

      = simple_form_for @medium, html: { id: 'edit-form', class: 'col-md-6 col-sm-12' }  do |f|
        = f.simple_fields_for @current_record do |r|
          = r.input :title, required: true

          - if @medium.class.name == 'Text'
            = f.input :text, as: :text, required: true, label: 'Text', input_html: {rows: 10, value: File.read(@medium.upload.path)}

          = r.input :location, input_html: {id: 'location-field'}
          = r.input :latitude, as: :hidden, input_html: {id: 'latitude-input'}
          = r.input :longitude, as: :hidden, input_html: {id: 'longitude-input'}

          - if @medium.class.name  != 'Text'
            = r.input :description, as: :text, required: true, :input_html => {:rows => 5}
          = r.input :ref_date, :label => 'Date', :include_blank => true, :start_year => 1850, :end_year => Date.today.year

        %hr

        = recaptcha_tags

        %br
        = f.button :submit, 'Save', class: 'btn btn-primary'
        %button{id: 'reset-form-btn', class: 'btn btn-warning'}
          Reset

:javascript
      //This is the map declaration, with the center and zoom etc.
      //It is unlikely that changes will need to be made here.
      map = new GMaps({
        el: '#map',
        lat: 53.452,
        lng: -1.212,
        zoom: 13,
        //This adds a marker on click
        click: function(e) {
          placeMarker(e.latLng);
        },
      });

      function resetMap() {
        var latLng = new google.maps.LatLng(parseFloat("#{@current_record.latitude}"),parseFloat("#{@current_record.longitude}"));
        placeMarker(latLng);
      }

      //This is the helper function for the click event on the map.
      //Removes old marker and adds a new one.
      function placeMarker(latLng){
        map.removeMarkers();
        map.addMarker({position:latLng});
        GMaps.geocode({
          latLng: latLng,
          callback: function(results, status) {
            if (status == 'OK') {
              //This is to prevent house numbers appearing, as much as possible.
              //Still occurs sometimes due to ranges of house numbers appearing
              if (parseInt(results[0].address_components[0].long_name)) {
                var location = results[0].formatted_address.substring(2)
                //if ($('#location-field').val().length <= 1){
                $('#location-field').val(location)
                //}
              } else {
                var location = results[0].formatted_address;
                //if ($('#location-field').val().length <= 1){
                $('#location-field').val(location)
                //}
              }
            }
          }
        });

        // Fills two hidden fields in the form which is submitted to the controller
        $("#latitude-input").val(latLng.lat())
        $("#longitude-input").val(latLng.lng())
      }

      $('#clear-marker').click(function(e){
        map.removeMarkers();
        $('#location-field').val('')
        $("#latitude-input").val('')
        $("#longitude-input").val('')
      });

      $('#reset-form-btn').click(function(e){
        e.preventDefault();
        $('#edit-form')[0].reset();
        resetMap();
        return false;
      });

      $(function() {
        resetMap();
      });


      // Parsley form validation
      $('#edit-form').parsley();
