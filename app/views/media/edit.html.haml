- content_for :title, "Edit #{@current_record.title}"

- content_for :scripts do
  = javascript_include_tag 'map'
  = javascript_include_tag 'parsley.min'
  = javascript_include_tag 'media'
  %script{:src => '//maps.google.com/maps/api/js', :type => 'text/javascript'}
  = yield :scripts

%h2 Edit #{ @current_record.title }

%div.panel.panel-default
  %div.panel-body
    .row
      - # This is at the top when the layout is small, not so great!
      #map-container.col-md-5.col-sm-12.pull-right
        %h3 Click to add marker
        #map{:style => 'height: 510px;'}
        %button{id: 'clear-marker', class: 'pull-right btn btn-warning'}
          Remove marker

      = simple_form_for @medium, html: { id: 'edit-form', class: 'col-md-6 col-sm-12' }  do |f|
        = f.simple_fields_for @current_record do |r|

          - if @medium.errors.any? or @current_record.errors.any?
            #error_explanation
              %h2
                = pluralize(@medium.errors.count + @current_record.errors.count, 'error')
              %ul
                - @medium.errors.full_messages.each do |msg|
                  %li #{msg}
                - @current_record.errors.full_messages.each do |msg|
                  %li #{msg}

          = r.input :title, required: true

          = r.input :location, input_html: {id: 'location-field'}
          = r.input :latitude, as: :hidden, input_html: {id: 'latitude-input', placeholder: nil}
          = r.input :longitude, as: :hidden, input_html: {id: 'longitude-input', placeholder: nil}

          = r.input :description, as: :text, required: true, :input_html => {:rows => 5} unless @medium.class.name  == 'Text'
          = r.input :ref_date, label: 'Date', placeholder: 'dd/mm/yyyy', as: :string, input_html: {class: 'datepicker',
           value: (@current_record.ref_date.strftime('%d/%m/%Y') unless  @current_record.ref_date.nil?) }

        %hr

        = recaptcha_tags

        %br
        = f.button :submit, 'Save', class: 'btn btn-primary'
        %button{id: 'reset-form-btn', class: 'btn btn-warning'}
          Reset

:javascript
      //This is the map declaration, with the center and zoom etc.
      //It is unlikely that changes will need to be made here.
      var latC = parseFloat("#{@current_record.latitude}");
      var lngC = parseFloat("#{@current_record.longitude}");

      if (latC && lngC){
        map = new GMaps({
          el: '#map',
          lat: latC,
          lng: lngC,
          zoom: 13,
          //This adds a marker on click
          click: function(e) {
            placeMarker(e.latLng);
          }
        });
      } else {
        map = new GMaps({
          el: '#map',
          lat: 53.452,
          lng: -1.212,
          zoom: 13,
          click: function(e) {
            placeMarker(e.latLng);
          }
        });
      }

      function resetMap() {
        var latLng = new google.maps.LatLng(latC, lngC);
        placeMarker(latLng);
      }

      $('#clear-marker').click(function(e){
        map.removeMarkers();
        $('#location-field').val('')
        $("#latitude-input").val('')
        $("#longitude-input").val('')
      });

      $('#reset-form-btn').click(function(e){
        e.preventDefault();
        $('#edit-form')[0].reset();
        resetMap();
        return false;
      });

      // Parsley form validation
      $('#edit-form').parsley();

      $(function() {
        resetMap();

        $('input.datepicker').data({behaviour: "datepicker"}).datepicker({
          format: "dd/mm/yyyy"
        });
      });

